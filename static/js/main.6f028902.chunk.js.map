{"version":3,"sources":["WeatherDataComponent.js","App.js","index.js"],"names":["WeatherDataComponent","nextProps","nextState","temp","this","props","city","console","log","className","feelsLike","src","icon","alt","width","height","humidity","pressure","maxTemp","minTemp","Component","App","state","cityName","weatherData","displayCity","getUserCity","e","setState","target","value","formSubmission","preventDefault","trim","fetchWeatherData","fetch","process","then","response","json","data","catch","err","onSubmit","type","placeholder","onChange","main","temp_max","temp_min","feels_like","weather","reactDOM","render","document","getElementById"],"mappings":"8JAEqBA,E,2KACnB,SAAsBC,EAAWC,GAE/B,OACED,EAAUE,OAASC,KAAKC,MAAMF,MAC9BF,EAAUK,OAASF,KAAKC,MAAMC,O,oBAOlC,WAEE,OADAC,QAAQC,IAAI,gCAEV,yBAAKC,UAAU,qBACb,6BACE,yCAAeL,KAAKC,MAAMK,WAC1B,2BAAIN,KAAKC,MAAMC,MACf,yBACEK,IAAG,2CAAsCP,KAAKC,MAAMO,KAAjD,WACHC,IAAI,GACJC,MAAM,MACNC,OAAO,SAGX,yBAAKN,UAAU,eACb,yBAAKA,UAAU,QACb,4BAAKL,KAAKC,MAAMF,KAAhB,UACA,yBACEQ,IAAI,uHACJG,MAAM,KACNC,OAAO,KACPF,IAAI,MAGR,yBAAKJ,UAAU,WACb,2BAAG,yBAAKE,IAAI,uHAAuHE,IAAI,GAAGC,MAAM,OAAOV,KAAKC,MAAMW,SAAlK,MACA,2BAAG,yBAAKL,IAAI,uHAAuHE,IAAI,GAAGC,MAAM,OAAhJ,IAAwJV,KAAKC,MAAMY,SAAnK,KACA,2BACE,yBACEN,IAAI,uHACJE,IAAI,GACJC,MAAM,OACL,IACFV,KAAKC,MAAMa,QANd,SAQA,2BACE,yBACEP,IAAI,uHACJE,IAAI,GACJC,MAAM,OACL,IACFV,KAAKC,MAAMc,QANd,gB,GA/CsCC,aCG7BC,G,iNACnBC,MAAQ,CACNC,SAAU,GACVC,YAAa,KACbC,YAAY,I,EAGdC,YAAc,SAACC,GACb,EAAKC,SAAS,CACZL,SAAUI,EAAEE,OAAOC,S,EAIvBC,eAAiB,SAACJ,GAEhBA,EAAEK,iBACFzB,QAAQC,IAAI,kBACZD,QAAQC,IAAI,EAAKc,MAAMC,UACW,KAA/B,EAAKD,MAAMC,SAASU,QACnB,EAAKC,iBAAiB,EAAKZ,MAAMC,W,EAKvCW,iBAAmB,SAAC5B,GAElB6B,MAAM,qDAAD,OACkD7B,EADlD,kBACgE8B,mCADhE,kBAGFC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKZ,SAAS,CAAEJ,YAAagB,EAAMf,YAAY,EAAKH,MAAMC,cACzEkB,OAAM,SAAAC,GAAG,OAAEnC,QAAQC,IAAIkC,O,uDAI5B,WAEEtC,KAAK8B,iBAAiB,Y,oBAIxB,WACC,IAAIM,EAAKpC,KAAKkB,MAAME,YAEnB,OACE,yBAAKf,UAAU,OACb,wBAAIA,UAAU,UAAd,eACA,0BAAMkC,SAAUvC,KAAK2B,gBACnB,2BACEa,KAAK,OACLC,YAAY,uBACZC,SAAU1C,KAAKsB,cAEjB,qDAIFc,GAAS,kBAAC,EAAD,CACPlC,KAAMF,KAAKkB,MAAMG,YACjBtB,KAAMqC,EAAKO,KAAK5C,KAChBc,SAAUuB,EAAKO,KAAK9B,SACpBC,QAASsB,EAAKO,KAAKC,SACnB7B,QAASqB,EAAKO,KAAKE,SACnBjC,SAAUwB,EAAKO,KAAK/B,SACpBN,UAAW8B,EAAKO,KAAKG,WACrBtC,KAAM4B,EAAKW,QAAQ,GAAGvC,Y,GAjECQ,c,cCAjCgC,EAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,eAAe,U","file":"static/js/main.6f028902.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class WeatherDataComponent extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    //controlling render method\n    if (\n      nextProps.temp === this.props.temp &&\n      nextProps.city === this.props.city\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    console.log(\"render from WeatherComponent\");\n    return (\n      <div className=\"weather-component\">\n        <div>\n          <p>Feels like {this.props.feelsLike}</p>\n          <p>{this.props.city}</p>\n          <img\n            src={`http://openweathermap.org/img/wn/${this.props.icon}@2x.png`}\n            alt=\"\"\n            width=\"200\"\n            height=\"200\"\n          />\n        </div>\n        <div className=\"description\">\n          <div className=\"temp\">\n            <h1>{this.props.temp} C°</h1>\n            <img\n              src=\"https://www.flaticon.com/svg/vstatic/svg/4498/4498691.svg?token=exp=1618924223~hmac=d49890b702527d89a43db8ca4f542d57\"\n              width=\"50\"\n              height=\"50\"\n              alt=\"\"\n            />\n          </div>\n          <div className=\"content\">\n            <p><img src=\"https://www.flaticon.com/svg/vstatic/svg/4370/4370768.svg?token=exp=1618925688~hmac=ef442fe7ab7ada8cfffd9ec7659e0da5\" alt=\"\" width=\"20\"/>{this.props.humidity} %</p>\n            <p><img src=\"https://www.flaticon.com/svg/vstatic/svg/1085/1085640.svg?token=exp=1618925488~hmac=591d076bb0d7393e2b23b1511643274c\" alt=\"\" width=\"20\"/> {this.props.pressure} </p>\n            <p>\n              <img\n                src=\"https://www.flaticon.com/svg/vstatic/svg/3815/3815449.svg?token=exp=1618925074~hmac=18afd7ba815a7657d30248d91c84f3da\"\n                alt=\"\"\n                width=\"20\"\n              />{\" \"}\n              {this.props.maxTemp}C°\n            </p>\n            <p>\n              <img\n                src=\"https://www.flaticon.com/svg/vstatic/svg/3815/3815449.svg?token=exp=1618925074~hmac=18afd7ba815a7657d30248d91c84f3da\"\n                alt=\"\"\n                width=\"20\"\n              />{\" \"}\n              {this.props.minTemp}C°\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport WeatherDataComponent from \"./WeatherDataComponent\";\nimport \"./WeatherData.css\"\n\n\nexport default class App extends Component {\n  state = {\n    cityName: \"\",\n    weatherData: null,\n    displayCity:\"\"\n  };\n\n  getUserCity = (e) => {\n    this.setState({\n      cityName: e.target.value,\n    });\n  };\n\n  formSubmission = (e) => {\n    //prevent default behaviour of form\n    e.preventDefault();\n    console.log(\"form Submitted\");\n    console.log(this.state.cityName);\n    if(this.state.cityName.trim() !== \"\"){\n        this.fetchWeatherData(this.state.cityName);\n    }\n  \n  };\n\n  fetchWeatherData = (city) => {\n    //fetching weather information from openweathermap api\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_API_KEY}&units=metric`\n    )\n      .then((response) => response.json())\n      .then((data) => this.setState({ weatherData: data, displayCity:this.state.cityName }))\n      .catch(err=>console.log(err))\n  };\n\n\n  componentDidMount(){\n    //onload\n    this.fetchWeatherData(\"berlin\")\n  }\n\n\n  render() {\n   let data=this.state.weatherData\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"header\">Weather App</h1>\n        <form onSubmit={this.formSubmission}>\n          <input\n            type=\"text\"\n            placeholder=\"Enter Your City Name\"\n            onChange={this.getUserCity}\n          />\n          <button>Get Weather Data</button>\n        </form>\n\n\n      { data &&  <WeatherDataComponent \n          city={this.state.displayCity} \n          temp={data.main.temp}\n          pressure={data.main.pressure}\n          maxTemp={data.main.temp_max}\n          minTemp={data.main.temp_min}\n          humidity={data.main.humidity}\n          feelsLike={data.main.feels_like}\n          icon={data.weather[0].icon}\n        /> }\n       \n      </div>\n    );\n  }\n}\n","\nimport React from \"react\"\nimport App from \"./App.js\"\nimport reactDOM from \"react-dom\"\n\nreactDOM.render(<App/>,document.getElementById(\"root\"))"],"sourceRoot":""}